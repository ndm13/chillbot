name: Release

on:
  release:
    types: ['published']

permissions:
  contents: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  compile-unixlike:
    name: Compile Unix-Like
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v3

      - name: Setup Deno
        uses: denoland/setup-deno@v1.1.1

      - name: Compile ${{ matrix.target }}
        run: |
          deno compile --allow-env --allow-read --allow-write --allow-net --target x86_64-unknown-linux-gnu --output build/4kbot main.ts
          mkdir release
          tar -czvf release/x86_64-unknown-linux-gnu.tar.gz ./build

      - uses: ncipollo/release-action@v1
        with:
          artifacts: "release/*"
          allowUpdates: true
          omitBodyDuringUpdate: true

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}